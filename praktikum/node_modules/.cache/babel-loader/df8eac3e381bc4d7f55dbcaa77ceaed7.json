{"ast":null,"code":"var _jsxFileName = \"E:\\\\MATERI DAN TUGAS\\\\MATERI DAN TUGAS XIIRPL4\\\\PRODUKTIF\\\\REACT JS\\\\session-storage-and-local-storage\\\\praktikum\\\\src\\\\pages\\\\Gallery.js\";\nimport React from \"react\";\nimport Card from \"../components/Card\";\nimport $ from \"jquery\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gallery extends React.Component {\n  constructor() {\n    super();\n\n    this.Add = () => {\n      // menampilkan komponen modalnya //fungsi $ untuk menunjuk elemen apa yang ingin diberikan aksi\n      $(\"#modal_buku\").modal(\"show\");\n      this.setState({\n        isbn: Math.random(1, 10000000),\n        //generate\n        judul: \"\",\n        penulis: \"\",\n        penerbit: \"\",\n        cover: \"\",\n        harga: 0,\n        action: \"insert\"\n      });\n    };\n\n    this.Edit = item => {\n      //menampilkan komponen modal\n      $(\"#modal_buku\").modal(\"show\");\n      this.setState({\n        isbn: item.isbn,\n        judul: item.judul,\n        penulis: item.penulis,\n        penerbit: item.penerbit,\n        cover: item.cover,\n        harga: item.harga,\n        action: \"update\",\n        selectedItem: item\n      });\n    };\n\n    this.Save = event => {\n      event.preventDefault(); //menampung data state buku\n\n      let tempBuku = this.state.buku;\n\n      if (this.state.action === \"insert\") {\n        //menambah data baru\n        tempBuku.push({\n          isbn: this.state.isbn,\n          judul: this.state.judul,\n          penulis: this.state.penulis,\n          penerbit: this.state.penerbit,\n          cover: this.state.cover,\n          harga: this.state.harga\n        });\n      } else if (this.state.action === \"update\") {\n        //menyimpan perubahan data\n        let index = tempBuku.indexOf(this.state.selectedItem);\n        tempBuku[index].isbn = this.state.isbn;\n        tempBuku[index].judul = this.state.judul;\n        tempBuku[index].penulis = this.state.penulis;\n        tempBuku[index].penerbit = this.state.penerbit;\n        tempBuku[index].cover = this.state.cover;\n        tempBuku[index].harga = this.state.harga;\n      }\n\n      this.setState({\n        buku: tempBuku\n      }); //menutup komponen modal_buku\n\n      $(\"#modal_buku\").modal(\"hide\");\n    };\n\n    this.Drop = item => {\n      // beri konfirmasi untuk menghapus data\n      if (window.confirm(\"Apakah anda yakin ingin menghapus data ini?\")) {\n        // menghapus data\n        let tempBuku = this.state.buku; // posisi index data yg akan dihapus\n\n        let index = tempBuku.indexOf(item); // hapus data\n\n        tempBuku.splice(index, 1);\n        this.setState({\n          buku: tempBuku\n        });\n      }\n    };\n\n    this.searching = event => {\n      if (event.keyCode === 13) {\n        //13 adalah kode untuk tombol enter\n        let keyword = this.state.keyword.toLowerCase();\n        let tempBuku = this.state.buku;\n        let result = tempBuku.filter(item => {\n          return item.judul.toLowerCase().includes(keyword) || item.penulis.toLowerCase().includes(keyword) || item.penerbit.toLowerCase().includes(keyword);\n        });\n        this.setState({\n          filterBuku: result\n        });\n      }\n    };\n\n    this.setUser = () => {\n      // cek eksistensi dari session storage\n      if (sessionStorage.getItem(\"user\") === null) {\n        // kondisi jika session storage \"user\" belum dibuat\n        let prompt = window.prompt(\"Masukkan Nama Anda\", \"\");\n\n        if (prompt === null || prompt === \"\") {\n          // jika user tidak mengisikan namanya\n          this.setUser();\n        } else {\n          // jika user telah mengisikan namanya\n          // simpan nama user ke session storage\n          sessionStorage.setItem(\"user\", prompt); // simpan nama user ke state.user\n\n          this.setState({\n            user: prompt\n          });\n        }\n      } else {\n        // kondisi saat session storage \"user\" telah dibuat\n        // akses nilai dari session storage \"user\"\n        let name = sessionStorage.getItem(\"user\");\n        this.setState({\n          user: name\n        });\n      }\n    };\n\n    this.addToCart = selectedItem => {\n      // membuat sebuah variabel untuk menampung cart sementara\n      let tempCart = []; // cek eksistensi dari data cart pada localStorage\n\n      if (localStorage.getItem(\"cart\") !== null) {\n        tempCart = JSON.parse(localStorage.getItem(\"cart\")); // JSON.parse() digunakan untuk mengonversi dari string -> array object\n      } // cek data yang dipilih user ke keranjang belanja\n\n\n      let existItem = tempCart.find(item => item.isbn === selectedItem.isbn);\n\n      if (existItem) {\n        // jika item yang dipilih ada pada keranjang belanja\n        window.alert(\"Anda telah memilih item ini\");\n      } else {\n        // user diminta memasukkan jumlah item yang dibeli\n        let promptJumlah = window.prompt(\"Masukkan jumlah item yang beli\", \"\");\n\n        if (promptJumlah !== null && promptJumlah !== \"\") {\n          // jika user memasukkan jumlah item yg dibeli\n          // menambahkan properti \"jumlahBeli\" pada item yang dipilih\n          selectedItem.jumlahBeli = promptJumlah; // masukkan item yg dipilih ke dalam cart\n\n          tempCart.push(selectedItem); // simpan array tempCart ke localStorage\n\n          localStorage.setItem(\"cart\", JSON.stringify(tempCart));\n        }\n      }\n    };\n\n    this.state = {\n      buku: [//buku adalah array yang memiliki tida objek\n      {\n        isbn: \"12345\",\n        judul: \"Bulan\",\n        penulis: \"Tere Liye\",\n        penerbit: \"CV Harapan Kita\",\n        harga: 90000,\n        cover: \"image/bulan.png\"\n      }, {\n        isbn: \"12346\",\n        judul: \"Anak Badai\",\n        penulis: \"Tere Liye\",\n        penerbit: \"CV Nusa Bangsa\",\n        harga: 80000,\n        cover: \"image/anakbadai.jpg\"\n      }, {\n        isbn: \"54321\",\n        judul: \"Bumi\",\n        penulis: \"Tere Liye\",\n        penerbit: \"CV Nusa Bangsa\",\n        harga: 70000,\n        cover: \"image/bumi.jpg\"\n      }],\n      action: \"\",\n      isbn: \"\",\n      judul: \"\",\n      penulis: \"\",\n      penerbit: \"\",\n      harga: 0,\n      cover: \"\",\n      selectedItem: null,\n      keyword: \"\",\n      filterBuku: []\n    };\n    this.state.filterBuku = this.state.buku;\n  }\n\n  componentDidMount() {\n    this.setUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0    \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-info\\xA0my-2\",\n          children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0    Nama\\xA0Pengguna:\\xA0\", this.state.user, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0    \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0    \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\\xA0my-2\",\n          placeholder: \"Pencarian\",\n          value: this.state.keyword,\n          onChange: ev => this.setState({\n            keyword: ev.target.value\n          }),\n          onKeyUp: ev => this.searching(ev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.filterBuku.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n          judul: item.judul,\n          penulis: item.penulis,\n          penerbit: item.penerbit,\n          harga: item.harga,\n          cover: item.cover,\n          onEdit: () => this.Edit(item),\n          onDrop: () => this.Drop(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => this.Add(),\n        children: \"Tambah Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"modal_buku\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: \"Form Buku\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: ev => this.Save(ev),\n                children: [\"Judul Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.judul,\n                  onChange: ev => this.setState({\n                    judul: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), \"Penulis Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.penulis,\n                  onChange: ev => this.setState({\n                    penulis: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this), \"Penerbit Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.penerbit,\n                  onChange: ev => this.setState({\n                    penerbit: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 37\n                }, this), \"Harga Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control mb-2\",\n                  value: this.state.harga,\n                  onChange: ev => this.setState({\n                    harga: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this), \"Cover Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"url\",\n                  className: \"form-control mb-2\",\n                  value: this.state.cover,\n                  onChange: ev => this.setState({\n                    cover: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-info btn-block\",\n                  type: \"submit\",\n                  children: \"Simpan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["E:/MATERI DAN TUGAS/MATERI DAN TUGAS XIIRPL4/PRODUKTIF/REACT JS/session-storage-and-local-storage/praktikum/src/pages/Gallery.js"],"names":["React","Card","$","Gallery","Component","constructor","Add","modal","setState","isbn","Math","random","judul","penulis","penerbit","cover","harga","action","Edit","item","selectedItem","Save","event","preventDefault","tempBuku","state","buku","push","index","indexOf","Drop","window","confirm","splice","searching","keyCode","keyword","toLowerCase","result","filter","includes","filterBuku","setUser","sessionStorage","getItem","prompt","setItem","user","name","addToCart","tempCart","localStorage","JSON","parse","existItem","find","alert","promptJumlah","jumlahBeli","stringify","componentDidMount","render","ev","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,sCAAP;AACA,OAAO,wCAAP;;;AAGA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAuCbC,GAvCa,GAuCP,MAAM;AACR;AACAJ,MAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBK,KAAjB,CAAuB,MAAvB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEC,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAc,QAAd,CADI;AACqB;AAC/BC,QAAAA,KAAK,EAAE,EAFG;AAGVC,QAAAA,OAAO,EAAE,EAHC;AAIVC,QAAAA,QAAQ,EAAE,EAJA;AAKVC,QAAAA,KAAK,EAAE,EALG;AAMVC,QAAAA,KAAK,EAAE,CANG;AAOVC,QAAAA,MAAM,EAAE;AAPE,OAAd;AAUH,KApDY;;AAAA,SAsDbC,IAtDa,GAsDLC,IAAD,IAAU;AACb;AACAjB,MAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBK,KAAjB,CAAuB,MAAvB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEU,IAAI,CAACV,IADD;AAEVG,QAAAA,KAAK,EAAEO,IAAI,CAACP,KAFF;AAGVC,QAAAA,OAAO,EAAEM,IAAI,CAACN,OAHJ;AAIVC,QAAAA,QAAQ,EAAEK,IAAI,CAACL,QAJL;AAKVC,QAAAA,KAAK,EAAEI,IAAI,CAACJ,KALF;AAMVC,QAAAA,KAAK,EAAEG,IAAI,CAACH,KANF;AAOVC,QAAAA,MAAM,EAAE,QAPE;AAQVG,QAAAA,YAAY,EAAED;AARJ,OAAd;AAWH,KApEY;;AAAA,SAsEbE,IAtEa,GAsELC,KAAD,IAAW;AACdA,MAAAA,KAAK,CAACC,cAAN,GADc,CAEd;;AACA,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAA1B;;AAEA,UAAG,KAAKD,KAAL,CAAWR,MAAX,KAAsB,QAAzB,EAAoC;AAChC;AACAO,QAAAA,QAAQ,CAACG,IAAT,CAAc;AACVlB,UAAAA,IAAI,EAAE,KAAKgB,KAAL,CAAWhB,IADP;AAEVG,UAAAA,KAAK,EAAE,KAAKa,KAAL,CAAWb,KAFR;AAGVC,UAAAA,OAAO,EAAE,KAAKY,KAAL,CAAWZ,OAHV;AAIVC,UAAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWX,QAJX;AAKVC,UAAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,KALR;AAMVC,UAAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT;AANR,SAAd;AAQH,OAVD,MAUO,IAAG,KAAKS,KAAL,CAAWR,MAAX,KAAsB,QAAzB,EAAoC;AACvC;AACA,YAAIW,KAAK,GAAGJ,QAAQ,CAACK,OAAT,CAAiB,KAAKJ,KAAL,CAAWL,YAA5B,CAAZ;AACAI,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBnB,IAAhB,GAAsB,KAAKgB,KAAL,CAAWhB,IAAjC;AACAe,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBhB,KAAhB,GAAuB,KAAKa,KAAL,CAAWb,KAAlC;AACAY,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBf,OAAhB,GAAyB,KAAKY,KAAL,CAAWZ,OAApC;AACAW,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBd,QAAhB,GAA0B,KAAKW,KAAL,CAAWX,QAArC;AACAU,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBb,KAAhB,GAAuB,KAAKU,KAAL,CAAWV,KAAlC;AACAS,QAAAA,QAAQ,CAACI,KAAD,CAAR,CAAgBZ,KAAhB,GAAuB,KAAKS,KAAL,CAAWT,KAAlC;AACH;;AAED,WAAKR,QAAL,CAAc;AAACkB,QAAAA,IAAI,EAAGF;AAAR,OAAd,EA1Bc,CA4Bd;;AACAtB,MAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBK,KAAjB,CAAuB,MAAvB;AACH,KApGY;;AAAA,SAsGbuB,IAtGa,GAsGLX,IAAD,IAAU;AACb;AACA,UAAGY,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAH,EAAiE;AAC7D;AACA,YAAIR,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAA1B,CAF6D,CAG7D;;AACA,YAAIE,KAAK,GAAGJ,QAAQ,CAACK,OAAT,CAAiBV,IAAjB,CAAZ,CAJ6D,CAM7D;;AACAK,QAAAA,QAAQ,CAACS,MAAT,CAAgBL,KAAhB,EAAuB,CAAvB;AAEA,aAAKpB,QAAL,CAAc;AAACkB,UAAAA,IAAI,EAAEF;AAAP,SAAd;AACH;AACN,KAnHc;;AAAA,SAsHbU,SAtHa,GAsHDZ,KAAK,IAAI;AACjB,UAAGA,KAAK,CAACa,OAAN,KAAkB,EAArB,EAAwB;AACpB;AAEA,YAAIC,OAAO,GAAG,KAAKX,KAAL,CAAWW,OAAX,CAAmBC,WAAnB,EAAd;AACA,YAAIb,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAA1B;AACA,YAAIY,MAAM,GAAGd,QAAQ,CAACe,MAAT,CAAgBpB,IAAI,IAAI;AACjC,iBAAOA,IAAI,CAACP,KAAL,CAAWyB,WAAX,GAAyBG,QAAzB,CAAkCJ,OAAlC,KACPjB,IAAI,CAACN,OAAL,CAAawB,WAAb,GAA2BG,QAA3B,CAAoCJ,OAApC,CADO,IAEPjB,IAAI,CAACL,QAAL,CAAcuB,WAAd,GAA4BG,QAA5B,CAAqCJ,OAArC,CAFA;AAGH,SAJY,CAAb;AAMA,aAAK5B,QAAL,CAAc;AAACiC,UAAAA,UAAU,EAAEH;AAAb,SAAd;AACH;AACJ,KApIY;;AAAA,SAsIbI,OAtIa,GAsIH,MAAM;AACZ;AACA,UAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,MAAmC,IAAtC,EAA2C;AACvC;AACA,YAAIC,MAAM,GAAGd,MAAM,CAACc,MAAP,CAAc,oBAAd,EAAmC,EAAnC,CAAb;;AACA,YAAGA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,EAAjC,EAAoC;AACpC;AACA,eAAKH,OAAL;AACC,SAHD,MAGK;AACL;AACA;AACAC,UAAAA,cAAc,CAACG,OAAf,CAAuB,MAAvB,EAA+BD,MAA/B,EAHK,CAIL;;AACA,eAAKrC,QAAL,CAAc;AAACuC,YAAAA,IAAI,EAAEF;AAAP,WAAd;AACC;AACJ,OAbD,MAaK;AACL;AAEA;AACA,YAAIG,IAAI,GAAGL,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX;AACA,aAAKpC,QAAL,CAAc;AAACuC,UAAAA,IAAI,EAAEC;AAAP,SAAd;AACC;AACJ,KA5JY;;AAAA,SAkKbC,SAlKa,GAkKA7B,YAAD,IAAkB;AAC1B;AACA,UAAI8B,QAAQ,GAAG,EAAf,CAF0B,CAI1B;;AACA,UAAGC,YAAY,CAACP,OAAb,CAAqB,MAArB,MAAiC,IAApC,EAAyC;AACrCM,QAAAA,QAAQ,GAAGE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACP,OAAb,CAAqB,MAArB,CAAX,CAAX,CADqC,CAErC;AACH,OARyB,CAU1B;;;AACA,UAAIU,SAAS,GAAGJ,QAAQ,CAACK,IAAT,CAAcpC,IAAI,IAAIA,IAAI,CAACV,IAAL,KAAcW,YAAY,CAACX,IAAjD,CAAhB;;AAEA,UAAG6C,SAAH,EAAa;AACT;AACAvB,QAAAA,MAAM,CAACyB,KAAP,CAAa,6BAAb;AACH,OAHD,MAGK;AACD;AACA,YAAIC,YAAY,GAAG1B,MAAM,CAACc,MAAP,CAAc,gCAAd,EAA+C,EAA/C,CAAnB;;AACA,YAAGY,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,EAA7C,EAAgD;AAC5C;AAEA;AACArC,UAAAA,YAAY,CAACsC,UAAb,GAA0BD,YAA1B,CAJ4C,CAM5C;;AACAP,UAAAA,QAAQ,CAACvB,IAAT,CAAcP,YAAd,EAP4C,CAS5C;;AACA+B,UAAAA,YAAY,CAACL,OAAb,CAAqB,MAArB,EAA6BM,IAAI,CAACO,SAAL,CAAeT,QAAf,CAA7B;AACH;AACJ;AACJ,KAlMY;;AAET,SAAKzB,KAAL,GAAY;AACRC,MAAAA,IAAI,EAAE,CAAE;AACJ;AACIjB,QAAAA,IAAI,EAAE,OADV;AACmBG,QAAAA,KAAK,EAAE,OAD1B;AACmCC,QAAAA,OAAO,EAAE,WAD5C;AAEIC,QAAAA,QAAQ,EAAE,iBAFd;AAEkCE,QAAAA,KAAK,EAAE,KAFzC;AAGID,QAAAA,KAAK,EAAE;AAHX,OADE,EAOF;AACIN,QAAAA,IAAI,EAAE,OADV;AACmBG,QAAAA,KAAK,EAAE,YAD1B;AACwCC,QAAAA,OAAO,EAAE,WADjD;AAEIC,QAAAA,QAAQ,EAAE,gBAFd;AAEiCE,QAAAA,KAAK,EAAE,KAFxC;AAGID,QAAAA,KAAK,EAAE;AAHX,OAPE,EAaF;AACIN,QAAAA,IAAI,EAAE,OADV;AACmBG,QAAAA,KAAK,EAAE,MAD1B;AACkCC,QAAAA,OAAO,EAAE,WAD3C;AAEIC,QAAAA,QAAQ,EAAE,gBAFd;AAEiCE,QAAAA,KAAK,EAAE,KAFxC;AAGID,QAAAA,KAAK,EAAE;AAHX,OAbE,CADE;AAsBRE,MAAAA,MAAM,EAAE,EAtBA;AAuBRR,MAAAA,IAAI,EAAE,EAvBE;AAwBRG,MAAAA,KAAK,EAAE,EAxBC;AAyBRC,MAAAA,OAAO,EAAE,EAzBD;AA0BRC,MAAAA,QAAQ,EAAE,EA1BF;AA2BRE,MAAAA,KAAK,EAAE,CA3BC;AA4BRD,MAAAA,KAAK,EAAE,EA5BC;AA6BRK,MAAAA,YAAY,EAAE,IA7BN;AA8BRgB,MAAAA,OAAO,EAAE,EA9BD;AA+BRK,MAAAA,UAAU,EAAE;AA/BJ,KAAZ;AAkCA,SAAKhB,KAAL,CAAWgB,UAAX,GAAwB,KAAKhB,KAAL,CAAWC,IAAnC;AACH;;AAyHDkC,EAAAA,iBAAiB,GAAE;AACf,SAAKlB,OAAL;AACH;;AAsCDmB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,wGACI;AAAI,UAAA,SAAS,EAAC,mBAAd;AAAA,kIACqB,KAAKpC,KAAL,CAAWsB,IADhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,uFAII;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,sBAA7B;AAAiD,UAAA,WAAW,EAAC,WAA7D;AACA,UAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWW,OADlB;AAEA,UAAA,QAAQ,EAAE0B,EAAE,IAAI,KAAKtD,QAAL,CAAc;AAAC4B,YAAAA,OAAO,EAAE0B,EAAE,CAACC,MAAH,CAAUC;AAApB,WAAd,CAFhB;AAGA,UAAA,OAAO,EAAEF,EAAE,IAAI,KAAK5B,SAAL,CAAe4B,EAAf;AAHf;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAEM,KAAKrC,KAAL,CAAWgB,UAAX,CAAsBwB,GAAtB,CAA0B,CAAC9C,IAAD,EAAOS,KAAP,kBACxB,QAAC,IAAD;AACA,UAAA,KAAK,EAAET,IAAI,CAACP,KADZ;AAEA,UAAA,OAAO,EAAEO,IAAI,CAACN,OAFd;AAGA,UAAA,QAAQ,EAAEM,IAAI,CAACL,QAHf;AAIA,UAAA,KAAK,EAAEK,IAAI,CAACH,KAJZ;AAKA,UAAA,KAAK,EAAEG,IAAI,CAACJ,KALZ;AAMA,UAAA,MAAM,EAAG,MAAM,KAAKG,IAAL,CAAUC,IAAV,CANf;AAOA,UAAA,MAAM,EAAG,MAAM,KAAKW,IAAL,CAAUX,IAAV;AAPf;AAAA;AAAA;AAAA;AAAA,gBADF;AAFN;AAAA;AAAA;AAAA;AAAA,cAXJ,eA2BI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,MAAM,KAAKb,GAAL,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAgCI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,EAAE,EAAC,YAA1B;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAOI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AAAM,gBAAA,QAAQ,EAAEwD,EAAE,IAAI,KAAKzC,IAAL,CAAUyC,EAAV,CAAtB;AAAA,sDAEI;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,SAAS,EAAC,mBAA7B;AACA,kBAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWb,KADlB;AAEA,kBAAA,QAAQ,EAAGkD,EAAE,IAAI,KAAKtD,QAAL,CAAc;AAACI,oBAAAA,KAAK,EAAEkD,EAAE,CAACC,MAAH,CAAUC;AAAlB,mBAAd,CAFjB;AAGA,kBAAA,QAAQ;AAHR;AAAA;AAAA;AAAA;AAAA,wBAFJ,+BAQI;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,SAAS,EAAC,mBAA7B;AACA,kBAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWZ,OADlB;AAEA,kBAAA,QAAQ,EAAGiD,EAAE,IAAI,KAAKtD,QAAL,CAAc;AAACK,oBAAAA,OAAO,EAAEiD,EAAE,CAACC,MAAH,CAAUC;AAApB,mBAAd,CAFjB;AAGA,kBAAA,QAAQ;AAHR;AAAA;AAAA;AAAA;AAAA,wBARJ,gCAcI;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,SAAS,EAAC,mBAA7B;AACA,kBAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWX,QADlB;AAEA,kBAAA,QAAQ,EAAGgD,EAAE,IAAI,KAAKtD,QAAL,CAAc;AAACM,oBAAAA,QAAQ,EAAEgD,EAAE,CAACC,MAAH,CAAUC;AAArB,mBAAd,CAFjB;AAGA,kBAAA,QAAQ;AAHR;AAAA;AAAA;AAAA;AAAA,wBAdJ,6BAoBI;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAqB,kBAAA,SAAS,EAAC,mBAA/B;AACA,kBAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWT,KADlB;AAEA,kBAAA,QAAQ,EAAG8C,EAAE,IAAI,KAAKtD,QAAL,CAAc;AAACQ,oBAAAA,KAAK,EAAE8C,EAAE,CAACC,MAAH,CAAUC;AAAlB,mBAAd,CAFjB;AAGA,kBAAA,QAAQ;AAHR;AAAA;AAAA;AAAA;AAAA,wBApBJ,6BA0BI;AAAO,kBAAA,IAAI,EAAC,KAAZ;AAAkB,kBAAA,SAAS,EAAC,mBAA5B;AACA,kBAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWV,KADlB;AAEA,kBAAA,QAAQ,EAAG+C,EAAE,IAAI,KAAKtD,QAAL,CAAc;AAACO,oBAAAA,KAAK,EAAE+C,EAAE,CAACC,MAAH,CAAUC;AAAlB,mBAAd,CAFjB;AAGA,kBAAA,QAAQ;AAHR;AAAA;AAAA;AAAA;AAAA,wBA1BJ,eA+BI;AAAQ,kBAAA,SAAS,EAAC,wBAAlB;AAA2C,kBAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoFH;;AA5RgC;;AAgSrC,eAAe7D,OAAf","sourcesContent":["import React from \"react\"\r\nimport Card from \"../components/Card\"\r\nimport $ from \"jquery\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n\r\nclass Gallery extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            buku: [ //buku adalah array yang memiliki tida objek\r\n                {\r\n                    isbn: \"12345\", judul: \"Bulan\", penulis: \"Tere Liye\",\r\n                    penerbit: \"CV Harapan Kita\" , harga: 90000,\r\n                    cover: \"image/bulan.png\"\r\n                },\r\n\r\n                {\r\n                    isbn: \"12346\", judul: \"Anak Badai\", penulis: \"Tere Liye\",\r\n                    penerbit: \"CV Nusa Bangsa\" , harga: 80000,\r\n                    cover: \"image/anakbadai.jpg\"\r\n                },\r\n\r\n                {\r\n                    isbn: \"54321\", judul: \"Bumi\", penulis: \"Tere Liye\",\r\n                    penerbit: \"CV Nusa Bangsa\" , harga: 70000,\r\n                    cover: \"image/bumi.jpg\"\r\n                },\r\n\r\n            ],\r\n\r\n            action: \"\",\r\n            isbn: \"\",\r\n            judul: \"\",\r\n            penulis: \"\",\r\n            penerbit: \"\",\r\n            harga: 0,\r\n            cover: \"\",\r\n            selectedItem: null,\r\n            keyword: \"\",\r\n            filterBuku: []\r\n        }\r\n\r\n        this.state.filterBuku = this.state.buku\r\n    }\r\n\r\n    Add = () => {\r\n        // menampilkan komponen modalnya //fungsi $ untuk menunjuk elemen apa yang ingin diberikan aksi\r\n        $(\"#modal_buku\").modal(\"show\")\r\n        this.setState({\r\n            isbn: Math.random(1,10000000), //generate\r\n            judul: \"\",\r\n            penulis: \"\",\r\n            penerbit: \"\",\r\n            cover: \"\",\r\n            harga: 0,\r\n            action: \"insert\"\r\n\r\n        })\r\n    }\r\n    //item adalah elemen atau data yang dipiih user, data mana yang akan dirubah \r\n    Edit = (item) => {\r\n        //menampilkan komponen modal\r\n        $(\"#modal_buku\").modal(\"show\")\r\n        this.setState({\r\n            isbn: item.isbn,\r\n            judul: item.judul,\r\n            penulis: item.penulis,\r\n            penerbit: item.penerbit,\r\n            cover: item.cover,\r\n            harga: item.harga,\r\n            action: \"update\",\r\n            selectedItem: item\r\n\r\n        })\r\n    }\r\n\r\n    Save = (event) => {\r\n        event.preventDefault();\r\n        //menampung data state buku\r\n        let tempBuku = this.state.buku\r\n\r\n        if(this.state.action === \"insert\" ) {\r\n            //menambah data baru\r\n            tempBuku.push({\r\n                isbn: this.state.isbn,\r\n                judul: this.state.judul,\r\n                penulis: this.state.penulis,\r\n                penerbit: this.state.penerbit,\r\n                cover: this.state.cover,\r\n                harga: this.state.harga,\r\n            })\r\n        } else if(this.state.action === \"update\" ) {\r\n            //menyimpan perubahan data\r\n            let index = tempBuku.indexOf(this.state.selectedItem)\r\n            tempBuku[index].isbn= this.state.isbn\r\n            tempBuku[index].judul= this.state.judul\r\n            tempBuku[index].penulis= this.state.penulis\r\n            tempBuku[index].penerbit= this.state.penerbit\r\n            tempBuku[index].cover= this.state.cover\r\n            tempBuku[index].harga= this.state.harga\r\n        }\r\n\r\n        this.setState({buku : tempBuku})\r\n\r\n        //menutup komponen modal_buku\r\n        $(\"#modal_buku\").modal(\"hide\")\r\n    }\r\n\r\n    Drop = (item) => {\r\n        // beri konfirmasi untuk menghapus data\r\n        if(window.confirm(\"Apakah anda yakin ingin menghapus data ini?\")){\r\n            // menghapus data\r\n            let tempBuku = this.state.buku\r\n            // posisi index data yg akan dihapus\r\n            let index = tempBuku.indexOf(item)\r\n\r\n            // hapus data\r\n            tempBuku.splice(index, 1)\r\n\r\n            this.setState({buku: tempBuku})\r\n        }\r\n  }\r\n\r\n\r\n    searching = event => {\r\n        if(event.keyCode === 13){\r\n            //13 adalah kode untuk tombol enter\r\n\r\n            let keyword = this.state.keyword.toLowerCase()\r\n            let tempBuku = this.state.buku\r\n            let result = tempBuku.filter(item => {\r\n                return item.judul.toLowerCase().includes(keyword) ||\r\n                item.penulis.toLowerCase().includes(keyword) ||\r\n                item.penerbit.toLowerCase().includes(keyword)\r\n            })\r\n\r\n            this.setState({filterBuku: result})\r\n        }\r\n    }\r\n\r\n    setUser = () => {\r\n        // cek eksistensi dari session storage\r\n        if(sessionStorage.getItem(\"user\") === null){\r\n            // kondisi jika session storage \"user\" belum dibuat\r\n            let prompt = window.prompt(\"Masukkan Nama Anda\",\"\")\r\n            if(prompt === null || prompt === \"\"){\r\n            // jika user tidak mengisikan namanya\r\n            this.setUser()\r\n            }else{\r\n            // jika user telah mengisikan namanya\r\n            // simpan nama user ke session storage\r\n            sessionStorage.setItem(\"user\", prompt)\r\n            // simpan nama user ke state.user\r\n            this.setState({user: prompt})\r\n            }\r\n        }else{\r\n        // kondisi saat session storage \"user\" telah dibuat\r\n\r\n        // akses nilai dari session storage \"user\"\r\n        let name = sessionStorage.getItem(\"user\")\r\n        this.setState({user: name})\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setUser()\r\n    }\r\n    \r\n    addToCart = (selectedItem) => {\r\n        // membuat sebuah variabel untuk menampung cart sementara\r\n        let tempCart = []\r\n\r\n        // cek eksistensi dari data cart pada localStorage\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            // JSON.parse() digunakan untuk mengonversi dari string -> array object\r\n        }\r\n\r\n        // cek data yang dipilih user ke keranjang belanja\r\n        let existItem = tempCart.find(item => item.isbn === selectedItem.isbn)\r\n\r\n        if(existItem){\r\n            // jika item yang dipilih ada pada keranjang belanja\r\n            window.alert(\"Anda telah memilih item ini\")\r\n        }else{\r\n            // user diminta memasukkan jumlah item yang dibeli\r\n            let promptJumlah = window.prompt(\"Masukkan jumlah item yang beli\",\"\")\r\n            if(promptJumlah !== null && promptJumlah !== \"\"){\r\n                // jika user memasukkan jumlah item yg dibeli\r\n\r\n                // menambahkan properti \"jumlahBeli\" pada item yang dipilih\r\n                selectedItem.jumlahBeli = promptJumlah\r\n                \r\n                // masukkan item yg dipilih ke dalam cart\r\n                tempCart.push(selectedItem)\r\n\r\n                // simpan array tempCart ke localStorage\r\n                localStorage.setItem(\"cart\", JSON.stringify(tempCart))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"text-info my-2\">\r\n                        Nama Pengguna: { this.state.user }\r\n                    </h4>\r\n                    <input type=\"text\" className=\"form-control my-2\" placeholder=\"Pencarian\"\r\n                    value={this.state.keyword}\r\n                    onChange={ev => this.setState({keyword: ev.target.value})}\r\n                    onKeyUp={ev => this.searching(ev)}\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    {/* { this.state.buku.map((item, index) => ( */}\r\n                    { this.state.filterBuku.map((item, index) => (\r\n                        <Card \r\n                        judul={item.judul}\r\n                        penulis={item.penulis}\r\n                        penerbit={item.penerbit}\r\n                        harga={item.harga}\r\n                        cover={item.cover}\r\n                        onEdit={ () => this.Edit(item)}\r\n                        onDrop={ () => this.Drop(item)}\r\n                        \r\n                        />\r\n                    )) }\r\n                </div>\r\n\r\n                <button className=\"btn btn-success\" onClick={() => this.Add()}>\r\n                    Tambah Data\r\n                </button>\r\n\r\n                {/* component modal sbg control manipulasi data */}\r\n                <div className=\"modal\" id=\"modal_buku\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            {/* modal header */}\r\n                            <div className=\"modal-header\">\r\n                                Form Buku\r\n                            </div>\r\n\r\n                            {/* modal body */}\r\n                            <div className=\"modal-body\">\r\n                                <form onSubmit={ev => this.Save(ev)}>\r\n                                    Judul Buku\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                    value={this.state.judul}\r\n                                    onChange={ ev => this.setState({judul: ev.target.value}) }\r\n                                    required />\r\n                                    \r\n                                    Penulis Buku\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                    value={this.state.penulis}\r\n                                    onChange={ ev => this.setState({penulis: ev.target.value}) }\r\n                                    required />\r\n                                    \r\n                                    Penerbit Buku\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                    value={this.state.penerbit}\r\n                                    onChange={ ev => this.setState({penerbit: ev.target.value}) }\r\n                                    required />\r\n                                    \r\n                                    Harga Buku\r\n                                    <input type=\"number\" className=\"form-control mb-2\"\r\n                                    value={this.state.harga}\r\n                                    onChange={ ev => this.setState({harga: ev.target.value}) }\r\n                                    required />\r\n                                    \r\n                                    Cover Buku\r\n                                    <input type=\"url\" className=\"form-control mb-2\"\r\n                                    value={this.state.cover}\r\n                                    onChange={ ev => this.setState({cover: ev.target.value}) }\r\n                                    required />\r\n\r\n                                    <button className=\"btn btn-info btn-block\" type=\"submit\">\r\n                                        Simpan\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Gallery;"]},"metadata":{},"sourceType":"module"}